            switch (Cipher)
            {
                case CipherEnum.Aes:
                case CipherEnum.Rijndael:
                    Size = 256;
                    KeyLen = 32;
                    Mode = "ECB";
                    BlockCipher = new Org.BouncyCastle.Crypto.Engines.AesEngine();
                    break;
                case CipherEnum.AesLight:
                    Size = 128;
                    KeyLen = 32;
                    Mode = "ECB";
                    BlockCipher = new Org.BouncyCastle.Crypto.Engines.AesLightEngine();
                    break;
                case CipherEnum.Aria:
                    Size = 128;
                    KeyLen = 32;
                    Mode = "ECB";
                    BlockCipher = new Org.BouncyCastle.Crypto.Engines.AriaEngine();
                    break;
                case CipherEnum.BlowFish:
                    Size = 64;
                    KeyLen = 8;
                    Mode = "ECB";
                    BlockCipher = new Org.BouncyCastle.Crypto.Engines.BlowfishEngine();
                    break;
                case CipherEnum.Fish2:
                    Size = 128;
                    KeyLen = 16;
                    Mode = "ECB";
                    BlockCipher = new Org.BouncyCastle.Crypto.Engines.TwofishEngine();
                    break;
                case CipherEnum.Fish3:
                    Size = 256;
                    KeyLen = 32;
                    Mode = "ECB";
                    BlockCipher = new Org.BouncyCastle.Crypto.Engines.ThreefishEngine(Size);
                    break;
                case CipherEnum.ThreeFish1024:
                    Size = 1024;
                    KeyLen = 32;
                    Mode = "ECB";
                    BlockCipher = new Org.BouncyCastle.Crypto.Engines.ThreefishEngine(Size);
                    break;
                case CipherEnum.Camellia:
                    Size = 128;
                    KeyLen = 16;
                    Mode = "ECB";
                    BlockCipher = new Org.BouncyCastle.Crypto.Engines.CamelliaLightEngine();
                    break;
                case CipherEnum.CamelliaLight:
                    Size = 128;
                    KeyLen = 16;
                    Mode = "ECB";
                    BlockCipher = new Org.BouncyCastle.Crypto.Engines.CamelliaLightEngine();
                    break;
                case CipherEnum.Cast5:
                    Size = 128;
                    KeyLen = 16;
                    Mode = "ECB";
                    BlockCipher = new Org.BouncyCastle.Crypto.Engines.Cast5Engine();
                    break;
                case CipherEnum.Cast6:
                    Size = 256;
                    KeyLen = 32;
                    Mode = "ECB";
                    BlockCipher = new Org.BouncyCastle.Crypto.Engines.Cast6Engine();
                    break;
                case CipherEnum.Des:
                    Size = 64;
                    KeyLen = 8;
                    Mode = "ECB";
                    BlockCipher = new Org.BouncyCastle.Crypto.Engines.DesEngine();
                    break;
                case CipherEnum.Des3:
                    Size = 128;
                    KeyLen = 16;
                    Mode = "ECB";
                    BlockCipher = new Org.BouncyCastle.Crypto.Engines.DesEdeEngine();
                    break;
                case CipherEnum.Dstu7624:
                    Size = 128;
                    KeyLen = 16;
                    Mode = "ECB";
                    BlockCipher = new Org.BouncyCastle.Crypto.Engines.Dstu7624Engine(Size);
                    break;
                case CipherEnum.Gost28147:
                    Size = 256;
                    KeyLen = 32;
                    Mode = "ECB";
                    BlockCipher = new Org.BouncyCastle.Crypto.Engines.Gost28147Engine();
                    break;
                case CipherEnum.Idea:
                    Size = 256;
                    KeyLen = 32;
                    Mode = "ECB";
                    BlockCipher = new Org.BouncyCastle.Crypto.Engines.IdeaEngine();
                    break;
                case CipherEnum.Noekeon:
                    Size = 128;
                    KeyLen = 16;
                    Mode = "ECB";
                    BlockCipher = new Org.BouncyCastle.Crypto.Engines.NoekeonEngine();
                    break;
                case CipherEnum.RC2:
                    Size = 128;
                    KeyLen = 32;
                    Mode = "ECB";
                    BlockCipher = new Org.BouncyCastle.Crypto.Engines.RC2Engine();
                    break;
                case CipherEnum.RC532:
                    Size = 256;
                    KeyLen = 32;
                    Mode = "ECB";
                    BlockCipher = new Org.BouncyCastle.Crypto.Engines.RC532Engine();
                    break;
                case CipherEnum.RC564:
                    Size = 64;
                    KeyLen = 32;
                    Mode = "ECB";
                    BlockCipher = new Org.BouncyCastle.Crypto.Engines.RC564Engine();
                    break;
                case CipherEnum.RC6:
                    Size = 256;
                    KeyLen = 32;
                    Mode = "ECB";
                    BlockCipher = new Org.BouncyCastle.Crypto.Engines.RC6Engine();
                    break;
                case CipherEnum.Seed:
                    BlockCipher = new Org.BouncyCastle.Crypto.Engines.SeedEngine();
                    Size = 128;
                    KeyLen = 16;
                    Mode = "ECB";
                    break;
                case CipherEnum.Serpent:
                    BlockCipher = new Org.BouncyCastle.Crypto.Engines.SerpentEngine();
                    Size = 128;
                    KeyLen = 16;
                    Mode = "ECB";
                    break;
                case CipherEnum.SM4:
                    BlockCipher = new Org.BouncyCastle.Crypto.Engines.SM4Engine();
                    Size = 128;
                    KeyLen = 16;
                    Mode = "ECB";
                    break;
                case CipherEnum.SkipJack:
                    Size = 256;
                    KeyLen = 32;
                    Mode = "ECB";
                    BlockCipher = new Org.BouncyCastle.Crypto.Engines.SkipjackEngine();
                    break;
                case CipherEnum.Tea:
                    Size = 128;
                    KeyLen = 16;
                    Mode = "ECB";
                    BlockCipher = new Org.BouncyCastle.Crypto.Engines.TeaEngine();
                    break;
                case CipherEnum.Tnepres:
                    Size = 128;
                    KeyLen = 16;
                    Mode = "ECB";
                    BlockCipher = new Org.BouncyCastle.Crypto.Engines.TnepresEngine();
                    break;
                case CipherEnum.XTea:
                    Size = 256;
                    KeyLen = 32;
                    Mode = "ECB";
                    BlockCipher = new Org.BouncyCastle.Crypto.Engines.XteaEngine();
                    break;
                default:
                    Size = 256;
                    KeyLen = 32;
                    Mode = "ECB";
                    BlockCipher = new Org.BouncyCastle.Crypto.Engines.AesEngine();
                    break;
            }
